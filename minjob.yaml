params:
  # Unikraft-specific
  - name: LWIP_NUM_TCPCON
    type: int
    only: [8] #, 16, 32, 64]

  - name: LWIP_NUM_TCPLISTENERS
    type: int
    only: [8] #, 16, 32, 64]
  
  - name: LWIP_UKNETDEV_POLLONLY
    type: string
    only: ["y"] #, "n"]
  
  - name: LWIP_POOLS
    type: string
    only: ["y"] #, "n"]

  # -----------------------------------
  # Added by me:
  # -----------------------------------

  # Platform options:
  #------------------------------------

  - name: HZ # only necessary as long as unikraft does not support dynamic timer interrupt frequency.
    type: int
    only: [100] #, 250] #, 300, 1000]

  # Allocator options:
  # -----------------------------------

  #  Chose allocator:
  - name: ALLOCATOR
    type: string
    only: ["tinyalloc"] #, "bbuddy", "poolalloc", "regalloc", "tinyalloc", "mimalloc", "tlsf", "none"]
    params:
  
    # Tinyalloc options:
    - name: LIBTINYALLOC_DISABLE_SPLIT
      when: "tinyalloc"
      type: string
      only: ["n"] #, "y"] # default n

    - name: LIBTINYALLOC_DISABLE_COMPACT
      when: "tinyalloc"
      type: string
      only: ["n"] #, "y"]

    - name: LIBTINYALLOC_SPLIT_THRESH
      when: "tinyalloc"
      type: int
      only: [16] #8, 16, 24, 32] # (try 8 and more); default 16;
  
    - name: LIBTINYALLOC_ALIGNMENT
      when: "tinyalloc"
      type: int
      only: [8] #, 16, 32, 64, 128] # (try 8 and more); default 8; Should be >= word size; Up to 128 byte for cache line alignment.
   
    # Mimalloc options:
    - name: LIBMIMALLOC_MIMALLOC_DEBUG
      when: "mimalloc"
      type: int
      only: [0] #, 1, 2]

    - name: LIBMIMALLOC_ASSERT
      when: "mimalloc"
      type: string
      only: ["y"] #, "n"]

    # TLSF specific options:
    - name: LIBTLSF_TLSF_LOG2_SLI
      when: "tlsf"
      type: int
      only: [4] #, 5, 6, 7] # do not try more then 7

  # LWIP options:
  #------------------------------------
  - name: LWIP_TCP_QUEUE_OOSEQ
    type: string
    only: ["y"] #, "n"]

  - name: LWIP_TCPIP_THREAD_STACKSIZE
    type: int
    only: [1024] #0, 256, 512, 1024, 2048, 4096, 8192, 16384] #in kbytes; 16k should be more then enough for stack size

  - name: LWIP_TCP_SND_BUF
    type: int
    only: [1048576] #256000, 524288, 1048576, 1572864, 2097152]    # in bytes; default 1048576=1GB; 1MB, 0.5GB, 1GB, 1.5GB, 2GB; these values might need to be more finetuned
  
  - name: LWIP_DNS_MAX_SERVERS
    type: int
    only: [2] #1, 2, 5, 10] #default 2

  - name: LWIP_DNS_LOCAL_HOST_LIST
    type: string
    only: ["y"] #, "n"] # default y

  - name: LWIP_DNS_LOCAL_HOSTLIST_IS_DYNAMIC # should only be available if LWIP_DNS_LOCAL_HOST_LIST is set to true.
    type: string
    only: ["y"] #, "n"]

  # Tracepoint options:
  # -----------------------------------
  - name: LIBUKDEBUG
    type: string
    only: ["y"] #, "n"] # default should definitly be no! The experiments take longer with tracepoints
    params:

    - name: LIBUKDEBUG_TRACEPOINTS
      when: "y"
      type: string
      only: ["y"] #, "n"]
      params:

      - name: LIBUKDEBUG_TRACE_BUFFER_SIZE
        when: "y"
        type: int
        only: [16777216]     # TODO: Replace with something more fitting!

      - name: LIBUKDEBUG_ALL_TRACEPOINTS
        when: "y"
        type: string
        only: ["y"] #, "n"]

  # -----------------------------------
  # -----------------------------------

  #! - name: LWIP_POOLS_TRY_BIGGER_POOL
  #!   type: string
  #!   only: ["y", "n"]

  #! - name: MEMP_USE_CUSTOM_POOLS
  #!   type: string
  #!   only: ["y", "n"]

  # Nginx-specific
  - name: ACCESS_LOG
    type: string
    only: ["y"] #, "n"]

  - name: KEEPALIVE_TIMEOUT
    type: int
    only: [0] #, 30, 60, 300]

  - name: OPEN_FILE_CACHE
    type: string
    only: ["caching"] #, "nocaching"]

  # Client-specific
  - name: WORKER_CONNECTIONS
    type: int
    only: [63]

  - name: PAYLOAD_SIZE
    type: int
    only: [612] # bytes
  
  - name: NUM_PARALLEL_CONNS
    type: int
    only: [5] #, 10, 30, 64]

inputs:
  - source: /etc/resolv.conf
    destination: /etc/resolv.conf
  - source: /etc/environment
    destination: /etc/environment
  - source: ./test.sh
    destination: /test.sh
  - source: ./nginx-caching.conf
    destination: /nginx-caching.conf
  - source: ./nginx-nocaching.conf
    destination: /nginx-nocaching.conf
  - source: ./run-gdb
    destination: /run-gdb

outputs:
  - path: /usr/src/unikraft/apps/nginx/build/nginx_kvm-x86_64
  - path: /usr/src/unikraft/apps/nginx/build/nginx_kvm-x86_64.dbg
  - path: /usr/src/unikraft/apps/nginx/initramfs.cpio
  - path: /results.txt
  - path: /traces.dat

runs:
  - name: build
    image: ghcr.io/alexpawe/ukbench-unikraft-test:test
    cores: 3
    devices:
      - /dev/urandom
    cmd:
      |
      set -ex
      export UK_WORKDIR=/usr/src/unikraft
      export UK_CACHEDIR=/usr/src/unikraft/.kraftcache
      export KRAFTRC=/usr/src/unikraft/.kraftrc
      export LC_ALL=C.UTF-8
      export LANG=C.UTF-8
      for env in $(cat /etc/environment); do \
        export $(echo $env | sed -e 's/"//g'); \
      done

      cd /usr/src/unikraft/apps/nginx
      if [[ $ALLOCATOR == "bbuddy" ]]; then \
        set -- "$@" --set LIBUKBOOT_INITBBUDY=y; \
      fi
      if [[ $ALLOCATOR == "poolalloc" ]]; then \
        set -- "$@" --set LIBUKALLOCPOOL=y; \
      fi
      if [[ $ALLOCATOR == "regalloc" ]]; then \
        set -- "$@" --set LIBUKBOOT_INITREGION=y; \
      fi
      if [[ $ALLOCATOR == "tinyalloc" ]]; then \
        set -- "$@" --set LIBUKBOOT_INITTINYALLOC=y \
                    --set LIBTINYALLOC_DISABLE_SPLIT=$LIBTINYALLOC_DISABLE_SPLIT \
                    --set LIBTINYALLOC_DISABLE_COMPACT=$LIBTINYALLOC_DISABLE_COMPACT \
                    --set LIBTINYALLOC_SPLIT_THRESH=$LIBTINYALLOC_SPLIT_THRESH \
                    --set LIBTINYALLOC_ALIGNMENT=$LIBTINYALLOC_ALIGNMENT; \
      fi
      if [[ $ALLOCATOR == "mimalloc" ]]; then \
        set -- "$@" --set LIBUKBOOT_INITMIMALLOC=y \
                    --set LIBMIMALLOC_MIMALLOC_DEBUG=$LIBMIMALLOC_MIMALLOC_DEBUG \
                    --set LIBMIMALLOC_ASSERT=$LIBMIMALLOC_ASSERT; \
      fi
      if [[ $ALLOCATOR == "tlsf" ]]; then \
        set -- "$@" --set LIBUKBOOT_INITTLSF=y \
                    --set LIBTLSF_TLSF_LOG2_SLI=$LIBTLSF_TLSF_LOG2_SLI; \
      fi
      if [[ $ALLOCATOR == "none" ]]; then \
        set -- "$@" --set LIBUKBOOT_NOALLOC=y; \
      fi
      
      # tracepoint options:
      #if [[ $LIBUKDEBUG == "y" ]]; then \
      #  set -- "$dbg@" --set LIBUKDEBUG=$LIBUKDEBUG; \
      #  if [[ $LIBUKDEBUG_TRACEPOINTS == "y" ]]; then \
      #    set -- "$tp@" --set LIBUKDEBUG_TRACEPOINTS=$LIBUKDEBUG_TRACEPOINTS; \
      #                 --set LIBUKDEBUG_TRACE_BUFFER_SIZE=$LIBUKDEBUG_TRACE_BUFFER_SIZE; \
      #                 --set LIBUKDEBUG_ALL_TRACEPOINTS=$LIBUKDEBUG_ALL_TRACEPOINTS; \
      #  fi
      #fi

      kraft -v configure -F \
        --arch x86_64 \
        --plat kvm \
        --set LWIP_NUM_TCPCON=$LWIP_NUM_TCPCON \
        --set LWIP_NUM_TCPLISTENERS=$LWIP_NUM_TCPLISTENERS \
        --set LWIP_UKNETDEV_POLLONLY=$LWIP_UKNETDEV_POLLONLY \
        --set LWIP_POOLS=$LWIP_POOLS \
        --set HZ=$HZ \
        "$@" \
        --set LIBUKDEBUG=$LIBUKDEBUG \
        --set LIBUKDEBUG_TRACEPOINTS=$LIBUKDEBUG_TRACEPOINTS \
        --set LIBUKDEBUG_TRACE_BUFFER_SIZE=$LIBUKDEBUG_TRACE_BUFFER_SIZE \
        --set LIBUKDEBUG_ALL_TRACEPOINTS=$LIBUKDEBUG_ALL_TRACEPOINTS \
        --set LWIP_TCP_QUEUE_OOSEQ=$LWIP_TCP_QUEUE_OOSEQ \
        --set LWIP_TCPIP_THREAD_STACKSIZE=$LWIP_TCPIP_THREAD_STACKSIZE \
        --set LWIP_TCP_SND_BUF=$LWIP_TCP_SND_BUF \
        --set LWIP_DNS_MAX_SERVERS=$LWIP_DNS_MAX_SERVERS \
        --set LWIP_DNS_LOCAL_HOST_LIST=$LWIP_DNS_LOCAL_HOST_LIST \
        --set LWIP_DNS_LOCAL_HOSTLIST_IS_DYNAMIC=$LWIP_DNS_LOCAL_HOSTLIST_IS_DYNAMIC \
        --set LIBDEVFS_DEV_STDOUT=$ACCESS_LOG \
        --yes LIBVFSCORE_ROOTFS_INITRD \
        --yes LIBUKCPIO \
        --yes LIBRAMFS \
        --no  LIB9PFS \
        --no  LIBUK9P

      kraft -v prepare
      kraft -v build --no-progress
      cat /nginx-$OPEN_FILE_CACHE.conf | sed "s/\$WORKER_CONNECTIONS/${WORKER_CONNECTIONS}/g" > ./fs0/nginx/conf/nginx.conf
      if [[ $ACCESS_LOG == "y" ]]; then \
        export ACCESS_LOG="\/dev\/stdout"; \
      else \
        export ACCESS_LOG="off"; \
      fi
      sed -i "s/\$ACCESS_LOG/${ACCESS_LOG}/g" ./fs0/nginx/conf/nginx.conf
      sed -i "s/\$KEEPALIVE_TIMEOUT/${KEEPALIVE_TIMEOUT}/g" ./fs0/nginx/conf/nginx.conf

      cat ./fs0/nginx/conf/nginx.conf

      # Generate cpio image
      cd fs0/
      tr -dc A-Za-z0-9 </dev/urandom | head -c ${PAYLOAD_SIZE} > ./nginx/html/payload.txt
      find -depth -print | tac | bsdcpio -o --format newc > ../initramfs.cpio

  - name: run
    image: ghcr.io/alexpawe/ukbench-unikraft-test:test
    cores: 3
    devices:
      - /dev/kvm
      - /dev/net/tun
    capabilities:
      - CAP_NET_ADMIN
    cmd: /test.sh

